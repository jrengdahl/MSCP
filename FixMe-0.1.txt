This document lists the fixes needed to rev 0.1 of the Qbus SSD board.


DONE Change the oscillator from 8 MHz to 16 MHz. 10 MHz is the minimum the PLL can use for a reference clock. Until then, the
8 MHz input seems to work. You just have to tell the PLL wizard that the input is 10 Hz. If you want a 100 MHz output from
the PLL tell it to generate 125 MHz. It will get scaled by 10/8 to generate an actual output of 100 MHz.


DONE Exchange BDAL4f and NWAIT on the FPGA. This is because CSI needs to be pulled high while programming the FPGA, however, BDAL4F
was driving CSI low. NWAIT is an FPGA output which floats at powerup, so the pullup works. The same requirement applies to
TEST_N, which currently has a pullup and no other use. 


DONE TEST_N is actually a GPIO which currently has no use or connection. It should be connected to a H723 GPIO, as long as
it is an output. It can be used as an interrupt handshake from the FPGA to the H723.

(NO, leave these as test point for more flexibility.) Connect more GPIOs on the H723 to the test points on the FPGA.

DONE 10K pulldowns are needed on the gates of all MOSFETS. Without the pulldown, at powerup, while the MCU or FPGA pins driving
the gates are still floating, the gates will eventually float high and turn on the MOSFETS. For LED drivers this is simply
wierd looking, as the LEDs slowly get brighter until they are full on, but for the Qbus drivers this is not a good thing.


Need to change the FPGA JTAG connector to match the Efinix programming cable. Also need to connect CRESET_N to that connector.
The programming cable pulses CRESET_N before programming the chip. Until this is done it has to be pulsed via an MCU output.


The 8 LEDs with holders are backwards. The fix for now is to remove the LED from the holder, reverse it, and re-bend the leads,
before soldering it in.


On the next board, try to get more through-hole parts assembled by JLCPCB.


Note that the address output by the FMC is shifted right by one at the MCU pins, since the byte enables, NLB0 and NLB1, convey the low order address bit.
What this means is that when you tell the FMC configurator to output a 23 bit address, you actually get 24 bits of address inside the MCU,
which results in a 16 megabyte address space. I will leave A22 in the design. Having multiple mappings of the 4 megabyte QBus address space
might be useful. For example, I can have one copy mapped as Device memory, and another copy cached (Normal).

A 23 bit address is the largest useable FMC address on the STM32H723ZG, since A24 would conflict with the trace port.


Change the color of the LEDs so that it is easier to tell which LED is lit from a distance. The LEDs are a bit too bright.
Perhaps change the second row of LEDs, or get rid of them.


See if there is a way to have both the H723 and the FPGA connected to the SPI-NOR.


Enable the H723 to assert INITL on the backplane.


Route BOOT0 also to a spare input, so the pushbutton can be used as a user input.
